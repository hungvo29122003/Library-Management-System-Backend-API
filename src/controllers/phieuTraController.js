const phieuTraModel = require('../models/phieuTraModel');
const pool = require('../utils/connectDB')
class PhieuTraController {
    async getAllPhieuTra(req, res) {
        try {
            const phieuTra = await phieuTraModel.getPhieuTra();
            res.status(200).json(phieuTra);
        } catch (error) {
            res.status(500).json({ message: 'L·ªói server!', error });
        }
    }
    // async createPhieuTra(req, res) {
    //     try {
    //         const { maPhieuMuon, maThuThu, ngayTra, danhSachSachTra, tongTien} = req.body;
            
    //         console.log("üìå D·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c:", req.body);
    
    //         // Th√™m phi·∫øu tr·∫£
    //         await phieuTraModel.addPhieuTra(maPhieuMuon, maThuThu, ngayTra, tongTien);
    
    //         // L·∫•y maPhieuTra m·ªõi nh·∫•t
    //         const maPhieuTra = await phieuTraModel.getLastPhieuTraId();
    //         console.log("üìå maPhieuTra:", maPhieuTra);
    
    //         // Ki·ªÉm tra danh s√°ch s√°ch tr∆∞·ªõc khi th√™m
    //         console.log("üìå Danh s√°ch s√°ch tr·∫£:", danhSachSachTra);
    
    //         // Th√™m chi ti·∫øt phi·∫øu tr·∫£
    //         await phieuTraModel.addChiTietPhieuTra(maPhieuTra, danhSachSachTra);
    
    //         res.json({ message: "T·∫°o phi·∫øu tr·∫£ th√†nh c√¥ng!", maPhieuTra });
    
    //     } catch (error) {
    //         console.error("‚ùå L·ªói t·∫°o phi·∫øu tr·∫£:", error);
    //         res.status(500).json({ message: "L·ªói server!" + error });
    //     }
    // }
    async createPhieuTra(req, res) {
        try {
            const { maPhieuMuon, maThuThu, ngayTra, danhSachSachTra, tongTien } = req.body;
    
            console.log("\ud83d\udccc D·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c:", req.body);
    
            // Ki·ªÉm tra d·ªØ li·ªáu ƒë·∫ßu v√†o
            if (!maPhieuMuon || !maThuThu || !danhSachSachTra || danhSachSachTra.length === 0 || !tongTien) {
                return res.status(400).json({ message: "D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá!" });
            }
    
            // Ki·ªÉm tra xem t·∫•t c·∫£ maSach trong danhSachSachTra c√≥ t·ªìn t·∫°i trong b·∫£ng Sach kh√¥ng
            const maSachList = danhSachSachTra.map(sach => sach.maSach);
            console.log("\ud83d\udccc Danh s√°ch m√£ s√°ch t·ª´ request:", maSachList);
    
            // Truy v·∫•n ki·ªÉm tra m√£ s√°ch h·ª£p l·ªá
            const placeholders = maSachList.map(() => '?').join(',');
            const [existingSach] = await pool.execute(
                `SELECT maSach FROM Sach WHERE maSach IN (${placeholders})`,
                maSachList
            );
    
            const existingMaSach = existingSach.map(row => row.maSach);
            console.log("\ud83d\udccc C√°c m√£ s√°ch h·ª£p l·ªá:", existingMaSach);
    
            const invalidMaSach = maSachList.filter(maSach => !existingMaSach.includes(maSach));
            if (invalidMaSach.length > 0) {
                return res.status(400).json({
                    message: `C√°c m√£ s√°ch kh√¥ng t·ªìn t·∫°i: ${invalidMaSach.join(', ')}`
                });
            }
    
            // N·∫øu kh√¥ng c√≥ ngayTra, s·ª≠ d·ª•ng ng√†y hi·ªán t·∫°i
            const ngayTraDate = ngayTra ? new Date(ngayTra) : new Date();
    
            // Th√™m phi·∫øu tr·∫£
            await phieuTraModel.addPhieuTra(maPhieuMuon, maThuThu, ngayTraDate, tongTien);
    
            // L·∫•y maPhieuTra m·ªõi nh·∫•t
            const maPhieuTra = await phieuTraModel.getLastPhieuTraId();
            console.log("\ud83d\udccc maPhieuTra:", maPhieuTra);
    
            // Ki·ªÉm tra danh s√°ch s√°ch tr∆∞·ªõc khi th√™m
            console.log("\ud83d\udccc Danh s√°ch s√°ch tr·∫£:", danhSachSachTra);
    
            // Th√™m chi ti·∫øt phi·∫øu tr·∫£
            await phieuTraModel.addChiTietPhieuTra(maPhieuTra, danhSachSachTra);
    
            // TƒÉng s·ªë l∆∞·ª£ng s√°ch trong kho
            for (let sach of danhSachSachTra) {
                await phieuTraModel.tangSoLuongSach(sach.maSach, sach.soLuong || 1);
            }
    
            res.status(200).json({ message: "T·∫°o phi·∫øu tr·∫£ th√†nh c√¥ng!", maPhieuTra });
        } catch (error) {
            console.error("‚ùå L·ªói t·∫°o phi·∫øu tr·∫£:", error);
            res.status(500).json({ message: "L·ªói server: " + error.message });
        }
    };
    async getChiTietPhieuTra(req, res) {
        try {
            const { id } = req.params;
            console.log("üìå ID phi·∫øu tr·∫£:", id);
            const phieuTra = await phieuTraModel.getChiTietPhieuTra(id);
            console.log(phieuTra)
            res.status(200).json(phieuTra);
        } catch (error) {
            res.status(500).json({ message: 'L·ªói server!', error });
        }
    }
}

module.exports = new PhieuTraController;