const docGiaModel = require ('../models/docGiaModel');

class DocGiaController {
    async getAllDocGia(req, res){
        try{
            const docGia = await docGiaModel.getAllDocGia()
            console.log(docGia)
            return res.status(201).json(docGia)
        } catch(error){
            return res.status(500).json({message: "L·ªói server ", error})
        }
    };
    async getAllNameDocGia(req, res){
        try{
            const docGia = await docGiaModel.getAllNameDocGia()
            console.log(docGia)
            return res.status(201).json(docGia)
        }catch(error){
            return res.status(500).json({message: "L·ªói server", error})
        }
    }
    async getMaDocGia(req, res){
        try{
            const tenDocGia = req.query.tenDocGia
            console.log(tenDocGia)
            if(!tenDocGia){
                return res.status(404).json({message: "Kh√¥ng t√¨m th·∫•y ƒë·ªôc gi·∫£"})
            }
            const docGia = await docGiaModel.getMaDocGia(tenDocGia)
            console.log(docGia)
            res.status(200).json({
                maDocGia: docGia.maDocGia,
                tenDocGia: docGia.tenDocGia
            });

        }catch(error){
            return res.status(500).json({message: "L·ªói server", error})
        }
    }
    async getLockStatus(req, res) {
        try {
            const { id } = req.params;
            console.log(id)
            const lockStatus = await docGiaModel.getLockStatus(id);
            if (!lockStatus) {
                return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y ƒë·ªôc gi·∫£" });
            }
            console.log(lockStatus)
            return res.status(200).json(lockStatus);
        } catch (error) {
            return res.status(500).json({ message: "L·ªói server!", error });
        }
    };
    // async updateLockStatus(req, res) {
    //     try {
    //         const { id } = req.params;
    //         console.log(id)
    //         const { lockAccount } = req.body;
    //         console.log(lockAccount)
    
    //         const updated = await docGiaModel.updateLockStatus(id, lockAccount);
    //         if (!updated) {
    //             return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y ƒë·ªôc gi·∫£" });
    //         }
    //         console.log(updated)
    //         res.status(200).json({ message: "C·∫≠p nh·∫≠t tr·∫°ng th√°i th√†nh c√¥ng" });
    //     } catch (error) {
    //         res.status(500).json({ message: "L·ªói server!", error });
    //     }
    // };
    async updateLockStatus(req, res) {
        try {
            const { tenDangNhap, lockAccount } = req.body;
            if (!tenDangNhap || lockAccount === undefined) {
                return res.status(400).json({ message: "Thi·∫øu th√¥ng tin!" });
            }
    
            const success = await docGiaModel.updateLockStatus (tenDangNhap, lockAccount);
            if (success) {
                return res.status(200).json({ message: "C·∫≠p nh·∫≠t tr·∫°ng th√°i t√†i kho·∫£n th√†nh c√¥ng!" });
            }
    
            return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n!" });
        } catch (error) {
            console.error("‚ùå L·ªói c·∫≠p nh·∫≠t tr·∫°ng th√°i:", error);
            return res.status(500).json({ message: "L·ªói server!", error });
        }
    }
    async getInfomationDocGia(req, res) {
        try {
            const { id } = req.params;
            console.log("üìå ID ƒë·ªôc gi·∫£:", id);
    
            const infomation = await docGiaModel.getInfomationRender(id);
    
            if (!infomation) {
                return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y ƒë·ªôc gi·∫£" });
            }
    
            console.log("üìå Th√¥ng tin ƒë·ªôc gi·∫£:", infomation);
            return res.status(200).json(infomation);
    
        } catch (error) {
            console.error("‚ùå L·ªói khi l·∫•y th√¥ng tin ƒë·ªôc gi·∫£:", error);
            return res.status(500).json({ message: "L·ªói server khi l·∫•y th√¥ng tin ƒë·ªôc gi·∫£!" });
        }
    }
    async updateReader(req, res) {
        try {
            console.log("Body nh·∫≠n ƒë∆∞·ª£c:", req.body); // Debug
            const { id } = req.params;
            const { tenDocGia, cccd, diaChi, namSinh, sdt, avatar } = req.body;
    
            if (!id) return res.status(400).json({ message: "Thi·∫øu m√£ ƒë·ªôc gi·∫£!" });
    
            const success = await docGiaModel.updateReaderInfo(
                id, tenDocGia, cccd, diaChi, namSinh, sdt, avatar
            );
    
            if (success) return res.status(200).json({ message: "C·∫≠p nh·∫≠t th√†nh c√¥ng!" });
    
            return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y ƒë·ªôc gi·∫£!" });
        } catch (error) {
            console.error("‚ùå L·ªói c·∫≠p nh·∫≠t ƒë·ªôc gi·∫£:", error);
            return res.status(500).json({ message: "L·ªói server!", error });
        }
    }
}

module.exports = new DocGiaController();